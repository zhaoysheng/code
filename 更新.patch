Index: cloud-consumerconsul-order80/src/main/java/com/zys/springcloud/controller/OrderConsulController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-consumerconsul-order80/src/main/java/com/zys/springcloud/controller/OrderConsulController.java	(date 1689736450466)
+++ cloud-consumerconsul-order80/src/main/java/com/zys/springcloud/controller/OrderConsulController.java	(date 1689736450466)
@@ -0,0 +1,31 @@
+package com.zys.springcloud.controller;
+
+import com.zys.springcloud.entities.CommonResult;
+import com.zys.springcloud.entities.Payment;
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.RestController;
+import org.springframework.web.client.RestTemplate;
+
+@RestController
+@Slf4j
+public class OrderConsulController {
+
+    private static final String PAYMENT_URL = "http://consul-provider-payment";
+
+    @Autowired
+    RestTemplate restTemplate;
+
+    @GetMapping("/consumer/payment/consul")
+    public String create(){
+
+        log.info("/consumer/create访问中==========");
+        String commonResult = restTemplate
+                .getForObject(PAYMENT_URL + "/payment/consul", String.class);
+        return commonResult;
+
+    }
+
+
+}
Index: cloud-consumerconsul-order80/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-consumerconsul-order80/src/main/resources/application.yml	(date 1689735717715)
+++ cloud-consumerconsul-order80/src/main/resources/application.yml	(date 1689735717715)
@@ -0,0 +1,13 @@
+server:
+  port: 80
+
+spring:
+  application:
+    name: cloud-consumer-order
+
+  cloud:
+    consul:
+      host: localhost
+      port: 8500
+      discovery:
+        service-name: ${spring.application.name}
\ No newline at end of file
Index: cloud-provide-payment8002/src/main/java/com/zys/springcloud/controller/PaymentController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-provide-payment8002/src/main/java/com/zys/springcloud/controller/PaymentController.java	(revision 0bd6cb819ad970b4ff1cc4f7e8b7216d4db06cd1)
+++ cloud-provide-payment8002/src/main/java/com/zys/springcloud/controller/PaymentController.java	(date 1689921516613)
@@ -18,6 +18,11 @@
     @Value("${server.port}")
     private String serverPort;
 
+    @GetMapping("/payment/lb/")
+    public String port(){
+        return serverPort;
+    }
+
     @PostMapping("/payment/create")
     public CommonResult create(@RequestBody Payment payment){
 
Index: cloud-consumerconsul-order80/src/main/java/com/zys/springcloud/OrderConsulMain80.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-consumerconsul-order80/src/main/java/com/zys/springcloud/OrderConsulMain80.java	(date 1689735824230)
+++ cloud-consumerconsul-order80/src/main/java/com/zys/springcloud/OrderConsulMain80.java	(date 1689735824230)
@@ -0,0 +1,15 @@
+package com.zys.springcloud;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
+
+@SpringBootApplication
+@EnableDiscoveryClient
+public class OrderConsulMain80 {
+    public static void main(String[] args) {
+
+        SpringApplication.run(OrderConsulMain80.class,args);
+
+    }
+}
Index: cloud-consumer-feign-order80/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-consumer-feign-order80/pom.xml	(date 1689754468350)
+++ cloud-consumer-feign-order80/pom.xml	(date 1689754468350)
@@ -0,0 +1,59 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>code</artifactId>
+        <groupId>org.zys</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>cloud-consumer-feign-order80</artifactId>
+
+    <!--openfeign-->
+    <dependencies>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-openfeign</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
+        </dependency>
+        <!-- 引入自己定义的api通用包 -->
+        <dependency>
+            <groupId>org.zys</groupId>
+            <artifactId>cloud-api-commons</artifactId>
+            <version>${project.version}</version>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-actuator</artifactId>
+        </dependency>
+
+        <!--        <dependency>-->
+        <!--            <groupId>org.springframework.boot</groupId>-->
+        <!--            <artifactId>spring-boot-devtools</artifactId>-->
+        <!--            <scope>runtime</scope>-->
+        <!--            <optional>true</optional>-->
+        <!--        </dependency>-->
+
+        <dependency>
+            <groupId>org.projectlombok</groupId>
+            <artifactId>lombok</artifactId>
+            <optional>true</optional>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-test</artifactId>
+            <scope>test</scope>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: cloud-provide-payment8004/src/main/java/com/zys/springcloud/controller/PaymentController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-provide-payment8004/src/main/java/com/zys/springcloud/controller/PaymentController.java	(date 1689674490651)
+++ cloud-provide-payment8004/src/main/java/com/zys/springcloud/controller/PaymentController.java	(date 1689674490651)
@@ -0,0 +1,20 @@
+package com.zys.springcloud.controller;
+
+import org.springframework.beans.factory.annotation.Value;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RestController;
+
+import java.util.UUID;
+
+@RestController
+public class PaymentController {
+
+    @Value("${server.port}")
+    private String serverPort;
+
+    @RequestMapping(value = "/payment/zk")
+    public String paymentzk() {
+        return "springcloud with zookeeper: " + serverPort + "\t" + UUID.randomUUID().toString();
+    }
+
+}
Index: cloud-consumerzk-order80/src/main/java/springcloud/controller/OrderController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-consumerzk-order80/src/main/java/springcloud/controller/OrderController.java	(date 1689731992731)
+++ cloud-consumerzk-order80/src/main/java/springcloud/controller/OrderController.java	(date 1689731992731)
@@ -0,0 +1,30 @@
+package springcloud.controller;
+
+import com.zys.springcloud.entities.CommonResult;
+import com.zys.springcloud.entities.Payment;
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PathVariable;
+import org.springframework.web.bind.annotation.RestController;
+import org.springframework.web.client.RestTemplate;
+
+import javax.annotation.Resource;
+
+@RestController
+@Slf4j
+public class OrderController {
+
+    // zookeeper服务中心的服务名称
+    public static final String INVOKE_URL = "http://cloud-provider-payment";
+
+    @Resource
+    private RestTemplate restTemplate;
+
+    @GetMapping(value = "/payment/zk")
+    public String paymentInfo() {
+        String result = restTemplate.getForObject(INVOKE_URL + "/payment/zk", String.class);
+        return result;
+    }
+
+}
Index: cloud-provide-payment8004/src/main/java/com/zys/springcloud/CloudProvidePayment8004Application.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-provide-payment8004/src/main/java/com/zys/springcloud/CloudProvidePayment8004Application.java	(date 1689674127583)
+++ cloud-provide-payment8004/src/main/java/com/zys/springcloud/CloudProvidePayment8004Application.java	(date 1689674127583)
@@ -0,0 +1,15 @@
+package com.zys.springcloud;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
+
+@SpringBootApplication
+@EnableDiscoveryClient //该注解用于向使用consul或者zookeeper作为注册中心时注册服务
+public class CloudProvidePayment8004Application {
+
+    public static void main(String[] args) {
+        SpringApplication.run(CloudProvidePayment8004Application.class,args);
+    }
+
+}
Index: cloud-providerconsul-payment8006/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-providerconsul-payment8006/pom.xml	(date 1689734422327)
+++ cloud-providerconsul-payment8006/pom.xml	(date 1689734422327)
@@ -0,0 +1,65 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>code</artifactId>
+        <groupId>org.zys</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>cloud-providerconsul-payment8006</artifactId>
+
+    <dependencies>
+        <!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-consul-discovery -->
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-consul-discovery</artifactId>
+        </dependency>
+
+        <dependency>
+            <artifactId>cloud-api-commons</artifactId>
+            <groupId>org.zys</groupId>
+            <version>1.0-SNAPSHOT</version>
+        </dependency>
+
+
+        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+
+        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-actuator</artifactId>
+        </dependency>
+
+        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools -->
+        <!--        <dependency>-->
+        <!--            <groupId>org.springframework.boot</groupId>-->
+        <!--            <artifactId>spring-boot-devtools</artifactId>-->
+        <!--            <scope>runtime</scope>-->
+        <!--            <optional>true</optional>-->
+        <!--        </dependency>-->
+
+        <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
+        <dependency>
+            <groupId>org.projectlombok</groupId>
+            <artifactId>lombok</artifactId>
+            <optional>true</optional>
+        </dependency>
+
+        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-test</artifactId>
+            <scope>test</scope>
+        </dependency>
+
+
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: cloud-provide-payment8004/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-provide-payment8004/src/main/resources/application.yml	(date 1689732115905)
+++ cloud-provide-payment8004/src/main/resources/application.yml	(date 1689732115905)
@@ -0,0 +1,13 @@
+#8004表示注册到zookeeper服务器的支付服务提供者端口号
+server:
+  port: 8004
+
+#服务别名----注册zookeeper到注册中心名称
+spring:
+  application:
+    name:cloud-provider-payment
+  cloud:
+    zookeeper:
+      connect-string: 192.168.189.129:2181,192.168.189.133:2181,192.168.189.132:2181
+      connection-timeout: 2000
+      session-timeout: 2000
\ No newline at end of file
Index: cloud-consumerzk-order80/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-consumerzk-order80/src/main/resources/application.yml	(date 1689731812452)
+++ cloud-consumerzk-order80/src/main/resources/application.yml	(date 1689731812452)
@@ -0,0 +1,9 @@
+server:
+  port: 80
+
+spring:
+  application:
+    name: cloud-consumer-order
+  cloud:
+    zookeeper:
+      connect-string: 192.168.189.129:2181,192.168.189.133:2181,192.168.189.132:2181
\ No newline at end of file
Index: cloud-consumerconsul-order80/src/main/java/com/zys/springcloud/config/ApplicationContextConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-consumerconsul-order80/src/main/java/com/zys/springcloud/config/ApplicationContextConfig.java	(date 1689736027119)
+++ cloud-consumerconsul-order80/src/main/java/com/zys/springcloud/config/ApplicationContextConfig.java	(date 1689736027119)
@@ -0,0 +1,17 @@
+package com.zys.springcloud.config;
+
+import org.springframework.cloud.client.loadbalancer.LoadBalanced;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.web.client.RestTemplate;
+
+@Configuration
+public class ApplicationContextConfig {
+
+    @Bean
+    @LoadBalanced
+    public RestTemplate getRestTemplate(){
+        return new RestTemplate();
+    }
+
+}
Index: cloud-consumerzk-order80/src/main/java/springcloud/configration/ApplicationContextConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-consumerzk-order80/src/main/java/springcloud/configration/ApplicationContextConfig.java	(date 1689731892891)
+++ cloud-consumerzk-order80/src/main/java/springcloud/configration/ApplicationContextConfig.java	(date 1689731892891)
@@ -0,0 +1,21 @@
+package springcloud.configration;
+
+import org.springframework.cloud.client.loadbalancer.LoadBalanced;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.web.client.RestTemplate;
+
+@Configuration
+public class ApplicationContextConfig {
+
+    // 配置bean 不然后面没法依赖注入，就像以前ssm整合时配置依赖注入一样，
+    // 需要在配置文件配置之后，代码中才可以依赖注入
+    // 当前文件就是spring的配置文件
+
+    @Bean
+    @LoadBalanced //让这个RestTemplate在请求时拥有客户端负载均衡的能力
+    public RestTemplate getRestTemplate(){
+        return new RestTemplate();
+    }
+
+}
Index: cloud-consumer-order80/src/main/java/com/zys/myrule/MyRule.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-consumer-order80/src/main/java/com/zys/myrule/MyRule.java	(date 1689754239054)
+++ cloud-consumer-order80/src/main/java/com/zys/myrule/MyRule.java	(date 1689754239054)
@@ -0,0 +1,9 @@
+package com.zys.myrule;
+
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+
+@Configuration
+public class MyRule {
+
+}
Index: cloud-consumerzk-order80/src/main/java/springcloud/CloudConsumerzkOrder80Application.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-consumerzk-order80/src/main/java/springcloud/CloudConsumerzkOrder80Application.java	(date 1689731959458)
+++ cloud-consumerzk-order80/src/main/java/springcloud/CloudConsumerzkOrder80Application.java	(date 1689731959458)
@@ -0,0 +1,15 @@
+package springcloud;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
+
+@SpringBootApplication
+@EnableDiscoveryClient
+public class CloudConsumerzkOrder80Application {
+
+    public static void main(String[] args) {
+        SpringApplication.run(CloudConsumerzkOrder80Application.class, args);
+    }
+
+}
Index: cloud-gateway-gateway9527/cloud-getway-gateway9527.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-gateway-gateway9527/cloud-getway-gateway9527.iml	(date 1689920361640)
+++ cloud-gateway-gateway9527/cloud-getway-gateway9527.iml	(date 1689920361640)
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4" />
\ No newline at end of file
Index: cloud-consumerzk-order80/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-consumerzk-order80/pom.xml	(date 1689731742996)
+++ cloud-consumerzk-order80/pom.xml	(date 1689731742996)
@@ -0,0 +1,67 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>code</artifactId>
+        <groupId>org.zys</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>cloud-consumerzk-order80</artifactId>
+
+    <dependencies>
+
+        <dependency>
+            <groupId>org.zys</groupId>
+            <artifactId>cloud-api-commons</artifactId>
+            <version>1.0-SNAPSHOT</version>
+        </dependency>
+
+
+        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+
+        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-actuator</artifactId>
+        </dependency>
+
+        <!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-zookeeper-discovery -->
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-zookeeper-discovery</artifactId>
+        </dependency>
+
+        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools -->
+        <!--        <dependency>-->
+        <!--            <groupId>org.springframework.boot</groupId>-->
+        <!--            <artifactId>spring-boot-devtools</artifactId>-->
+        <!--            <scope>runtime</scope>-->
+        <!--            <optional>true</optional>-->
+        <!--        </dependency>-->
+
+        <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
+        <dependency>
+            <groupId>org.projectlombok</groupId>
+            <artifactId>lombok</artifactId>
+            <optional>true</optional>
+        </dependency>
+
+        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-test</artifactId>
+            <scope>test</scope>
+        </dependency>
+
+
+    </dependencies>
+
+
+</project>
\ No newline at end of file
Index: cloud-provide-payment8004/target/classes/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-provide-payment8004/target/classes/application.yml	(date 1689732115905)
+++ cloud-provide-payment8004/target/classes/application.yml	(date 1689732115905)
@@ -0,0 +1,13 @@
+#8004表示注册到zookeeper服务器的支付服务提供者端口号
+server:
+  port: 8004
+
+#服务别名----注册zookeeper到注册中心名称
+spring:
+  application:
+    name:cloud-provider-payment
+  cloud:
+    zookeeper:
+      connect-string: 192.168.189.129:2181,192.168.189.133:2181,192.168.189.132:2181
+      connection-timeout: 2000
+      session-timeout: 2000
\ No newline at end of file
Index: cloud-consumerzk-order80/target/classes/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-consumerzk-order80/target/classes/application.yml	(date 1689731812452)
+++ cloud-consumerzk-order80/target/classes/application.yml	(date 1689731812452)
@@ -0,0 +1,9 @@
+server:
+  port: 80
+
+spring:
+  application:
+    name: cloud-consumer-order
+  cloud:
+    zookeeper:
+      connect-string: 192.168.189.129:2181,192.168.189.133:2181,192.168.189.132:2181
\ No newline at end of file
Index: cloud-gateway-gateway9527/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-gateway-gateway9527/pom.xml	(date 1689924380336)
+++ cloud-gateway-gateway9527/pom.xml	(date 1689924380336)
@@ -0,0 +1,49 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>code</artifactId>
+        <groupId>org.zys</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>cloud-gateway-gateway9527</artifactId>
+
+    <dependencies>
+        <!--gateway-->
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-gateway</artifactId>
+        </dependency>
+        <!--eureka-client-->
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
+        </dependency>
+        <!-- 引入自己定义的api通用包，可以使用Payment支付Entity -->
+        <dependency>
+            <groupId>org.zys</groupId>
+            <artifactId>cloud-api-commons</artifactId>
+            <version>${project.version}</version>
+        </dependency>
+        <!--        <dependency>-->
+        <!--            <groupId>org.springframework.boot</groupId>-->
+        <!--            <artifactId>spring-boot-devtools</artifactId>-->
+        <!--            <scope>runtime</scope>-->
+        <!--            <optional>true</optional>-->
+        <!--        </dependency>-->
+        <dependency>
+            <groupId>org.projectlombok</groupId>
+            <artifactId>lombok</artifactId>
+            <optional>true</optional>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-test</artifactId>
+            <scope>test</scope>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(revision 0bd6cb819ad970b4ff1cc4f7e8b7216d4db06cd1)
+++ .idea/compiler.xml	(date 1689924383979)
@@ -7,16 +7,26 @@
         <sourceOutputDir name="target/generated-sources/annotations" />
         <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
         <outputRelativeToContentRoot value="true" />
+        <module name="cloud-consumer-order80" />
+        <module name="cloud-getway-gateway9527" />
+        <module name="cloud-provider-hystrix-payment8001" />
         <module name="cloud-eureka-server7002" />
-        <module name="cloud-api-commons" />
         <module name="cloud-eureka-server7001" />
         <module name="cloud-provide-payment8002" />
+        <module name="cloud-api-commons" />
+        <module name="cloud-consumerzk-order80" />
+        <module name="cloud-consumerconsul-order80" />
         <module name="cloud-provide-payment8001" />
-        <module name="cloud-consumer-order80" />
+        <module name="cloud-gateway-gateway9527" />
+        <module name="cloud-provide-payment8004" />
+        <module name="cloud-providerconsul-payment8006" />
+        <module name="cloud-consumer-hytrix-order80" />
         <module name="丑陋的、" />
+        <module name="cloud-consumer-feign-order80" />
       </profile>
     </annotationProcessing>
     <bytecodeTargetLevel>
+      <module name="cloud-getway-gateway9527" target="1.8" />
       <module name="丑陋的、" target="1.8" />
     </bytecodeTargetLevel>
   </component>
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/encodings.xml	(revision 0bd6cb819ad970b4ff1cc4f7e8b7216d4db06cd1)
+++ .idea/encodings.xml	(date 1689924383979)
@@ -3,16 +3,32 @@
   <component name="Encoding" defaultCharsetForPropertiesFiles="UTF-8">
     <file url="file://$PROJECT_DIR$/cloud-api-commons/src/main/java" charset="UTF-8" />
     <file url="file://$PROJECT_DIR$/cloud-api-commons/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/cloud-consumer-feign-order80/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/cloud-consumer-feign-order80/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/cloud-consumer-hytrix-order80/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/cloud-consumer-hytrix-order80/src/main/resources" charset="UTF-8" />
     <file url="file://$PROJECT_DIR$/cloud-consumer-order80/src/main/java" charset="UTF-8" />
     <file url="file://$PROJECT_DIR$/cloud-consumer-order80/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/cloud-consumerconsul-order80/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/cloud-consumerconsul-order80/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/cloud-consumerzk-order80/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/cloud-consumerzk-order80/src/main/resources" charset="UTF-8" />
     <file url="file://$PROJECT_DIR$/cloud-eureka-server7001/src/main/java" charset="UTF-8" />
     <file url="file://$PROJECT_DIR$/cloud-eureka-server7001/src/main/resources" charset="UTF-8" />
     <file url="file://$PROJECT_DIR$/cloud-eureka-server7002/src/main/java" charset="UTF-8" />
     <file url="file://$PROJECT_DIR$/cloud-eureka-server7002/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/cloud-gateway-gateway9527/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/cloud-gateway-gateway9527/src/main/resources" charset="UTF-8" />
     <file url="file://$PROJECT_DIR$/cloud-provide-payment8001/src/main/java" charset="UTF-8" />
     <file url="file://$PROJECT_DIR$/cloud-provide-payment8001/src/main/resources" charset="UTF-8" />
     <file url="file://$PROJECT_DIR$/cloud-provide-payment8002/src/main/java" charset="UTF-8" />
     <file url="file://$PROJECT_DIR$/cloud-provide-payment8002/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/cloud-provide-payment8004/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/cloud-provide-payment8004/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/cloud-provider-hystrix-payment8001/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/cloud-provider-hystrix-payment8001/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/cloud-providerconsul-payment8006/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/cloud-providerconsul-payment8006/src/main/resources" charset="UTF-8" />
     <file url="PROJECT" charset="UTF-8" />
   </component>
 </project>
\ No newline at end of file
Index: cloud-consumer-feign-order80/cloud-consumer-feign-order80.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-consumer-feign-order80/cloud-consumer-feign-order80.iml	(date 1689754241258)
+++ cloud-consumer-feign-order80/cloud-consumer-feign-order80.iml	(date 1689754241258)
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4" />
\ No newline at end of file
Index: cloud-providerconsul-payment8006/cloud-providerconsul-payment8006.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-providerconsul-payment8006/cloud-providerconsul-payment8006.iml	(date 1689734315093)
+++ cloud-providerconsul-payment8006/cloud-providerconsul-payment8006.iml	(date 1689734315093)
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4" />
\ No newline at end of file
Index: cloud-gateway-gateway9527/src/main/java/com/zys/springcloud/GatewayMain9527.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-gateway-gateway9527/src/main/java/com/zys/springcloud/GatewayMain9527.java	(date 1689920908298)
+++ cloud-gateway-gateway9527/src/main/java/com/zys/springcloud/GatewayMain9527.java	(date 1689920908298)
@@ -0,0 +1,14 @@
+package com.zys.springcloud;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.cloud.netflix.eureka.EnableEurekaClient;
+
+@SpringBootApplication
+@EnableEurekaClient
+public class GatewayMain9527 {
+
+    public static void main(String[] args) {
+        SpringApplication.run(GatewayMain9527.class,args);
+    }
+}
Index: cloud-provider-hystrix-payment8001/src/main/java/com/zys/springcloud/PaymentHystrixMain8001.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-provider-hystrix-payment8001/src/main/java/com/zys/springcloud/PaymentHystrixMain8001.java	(date 1689819075867)
+++ cloud-provider-hystrix-payment8001/src/main/java/com/zys/springcloud/PaymentHystrixMain8001.java	(date 1689819075867)
@@ -0,0 +1,15 @@
+package com.zys.springcloud;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
+import org.springframework.cloud.netflix.hystrix.EnableHystrix;
+
+@SpringBootApplication
+@EnableDiscoveryClient
+@EnableHystrix
+public class PaymentHystrixMain8001 {
+    public static void main(String[] args) {
+        SpringApplication.run(PaymentHystrixMain8001.class,args);
+    }
+}
Index: cloud-provider-hystrix-payment8001/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-provider-hystrix-payment8001/src/main/resources/application.yml	(date 1689758911716)
+++ cloud-provider-hystrix-payment8001/src/main/resources/application.yml	(date 1689758911716)
@@ -0,0 +1,16 @@
+server:
+  port: 8001
+
+spring:
+  application:
+    name: cloud-provider-hystrix-payment
+
+eureka:
+  client:
+    #表示是否将自己注册进EurekaServer 默认为true
+    register-with-eureka: true
+    #是否从EurekaServer抓取已有的的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
+    fetch-registry: true
+    service-url:
+      defaultZone: http://localhost:7001/eureka
+#      defaultZone: http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/
\ No newline at end of file
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pom.xml	(revision 0bd6cb819ad970b4ff1cc4f7e8b7216d4db06cd1)
+++ pom.xml	(date 1689924240118)
@@ -14,12 +14,21 @@
         <module>cloud-eureka-server7001</module>
         <module>cloud-eureka-server7002</module>
         <module>cloud-provide-payment8002</module>
+        <module>cloud-provide-payment8004</module>
+        <module>cloud-consumerzk-order80</module>
+        <module>cloud-providerconsul-payment8006</module>
+        <module>cloud-consumerconsul-order80</module>
+        <module>cloud-consumer-feign-order80</module>
+        <module>cloud-provider-hystrix-payment8001</module>
+        <module>cloud-consumer-hytrix-order80</module>
+        <module>cloud-gateway-gateway9527</module>
     </modules>
     <packaging>pom</packaging>
 
     <properties>
         <!--编译编码-->
         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+        <project.version>1.0-SNAPSHOT</project.version>
     </properties>
 <!--    因为是dependencyManagement
 所以<type>pom</type>和<scope>import</scope>必须引入-->
@@ -95,6 +104,13 @@
                 <type>pom</type>
                 <scope>import</scope>
             </dependency>
+
+            <!-- https://mvnrepository.com/artifact/cn.hutool/hutool-all -->
+            <dependency>
+                <groupId>cn.hutool</groupId>
+                <artifactId>hutool-all</artifactId>
+                <version>5.8.15</version>
+            </dependency>
 
         </dependencies>
     </dependencyManagement>
Index: cloud-consumerzk-order80/cloud-consumerzk-order80.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-consumerzk-order80/cloud-consumerzk-order80.iml	(date 1689731708796)
+++ cloud-consumerzk-order80/cloud-consumerzk-order80.iml	(date 1689731708796)
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4" />
\ No newline at end of file
Index: cloud-consumer-hytrix-order80/src/main/java/com/zys/springcloud/CloudConsumerFeignHystrixOrder80Application.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-consumer-hytrix-order80/src/main/java/com/zys/springcloud/CloudConsumerFeignHystrixOrder80Application.java	(date 1689820468859)
+++ cloud-consumer-hytrix-order80/src/main/java/com/zys/springcloud/CloudConsumerFeignHystrixOrder80Application.java	(date 1689820468859)
@@ -0,0 +1,17 @@
+package com.zys.springcloud;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.cloud.netflix.hystrix.EnableHystrix;
+import org.springframework.cloud.openfeign.EnableFeignClients;
+
+@SpringBootApplication
+@EnableFeignClients
+@EnableHystrix
+public class CloudConsumerFeignHystrixOrder80Application {
+    public static void main(String[] args) {
+        SpringApplication.run(CloudConsumerFeignHystrixOrder80Application.class,args);
+
+    }
+
+}
Index: cloud-eureka-server7001/target/classes/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-eureka-server7001/target/classes/application.yml	(revision 0bd6cb819ad970b4ff1cc4f7e8b7216d4db06cd1)
+++ cloud-eureka-server7001/target/classes/application.yml	(date 1689758232723)
@@ -12,7 +12,8 @@
     service-url:
       #设置Eureka Server交互的地址查询服务和注册服务都需要依赖这个地址。
 #      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
-      defaultZone: http://eureka7002.com:7002/eureka/ #集群模式
+#      defaultZone: http://eureka7002.com:7002/eureka/ #集群模式
+      defaultZone: http://eureka7001.com:7001/eureka/ #单个模式
   server:
     #关闭自我保护机制，保证不可以服务被及时剔除
     enable-self-preservation: false
Index: cloud-gateway-gateway9527/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-gateway-gateway9527/src/main/resources/application.yml	(date 1689922556864)
+++ cloud-gateway-gateway9527/src/main/resources/application.yml	(date 1689922556864)
@@ -0,0 +1,42 @@
+server:
+  port: 9527
+
+spring:
+  application:
+    name: cloud-gateway
+  cloud:
+    gateway:
+      discovery:
+        locator:
+          enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由
+      routes:
+        - id: payment_routh #payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名
+          #uri: http://www.baidu.com
+          #uri: http://localhost:8001          #匹配后提供服务的路由地址
+          uri: lb://CLOUD-PAYMENT-SERVICE #匹配后提供服务的路由地址 lb--负载均衡
+          predicates:
+            - Path=/payment/get/**         # 断言，路径相匹配的进行路由
+            #- Path=/
+
+        - id: payment_routh2 #payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名
+          #uri: http://localhost:8001          #匹配后提供服务的路由地址
+          uri: lb://CLOUD-PAYMENT-SERVICE #匹配后提供服务的路由地址
+          predicates:
+            - Path=/payment/lb/**         # 断言，路径相匹配的进行路由
+            - After=2023-07-21T14:53:31.401+08:00[Asia/Shanghai]
+            #            - Before=2020-03-08T10:59:34.102+08:00[Asia/Shanghai]
+            #            - Between=2020-03-08T10:59:34.102+08:00[Asia/Shanghai] ,  2020-03-08T10:59:34.102+08:00[Asia/Shanghai]
+            #            curl http://localhost:9527/payment/lb --cookie "username=zzyy"
+            #            - Cookie=username,zzyy   #Cookie=cookieName,正则表达式
+            # 请求头要有X-Request-Id属性并且值为整数的正则表达式 curl http://localhost:9527/payment/lb --cookie "username=zzyy" -H "X-Request-Id:11"
+#            - Header=X-Request-Id, \d+
+#            - Host=**.atguigu.com  # curl http://localhost:9527/payment/lb -H "Host:afae.atguigu.com"
+
+eureka:
+  instance:
+    hostname: cloud-gateway-service
+  client: #服务提供者provider注册进eureka服务列表内
+    service-url:
+      register-with-eureka: true
+      fetch-registry: true
+      defaultZone: http://eureka7001.com:7001/eureka
\ No newline at end of file
Index: cloud-provider-hystrix-payment8001/src/main/java/com/zys/springcloud/service/PaymentService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-provider-hystrix-payment8001/src/main/java/com/zys/springcloud/service/PaymentService.java	(date 1689909048898)
+++ cloud-provider-hystrix-payment8001/src/main/java/com/zys/springcloud/service/PaymentService.java	(date 1689909048898)
@@ -0,0 +1,107 @@
+package com.zys.springcloud.service;
+
+import cn.hutool.core.util.IdUtil;
+import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;
+import com.netflix.hystrix.contrib.javanica.annotation.HystrixProperty;
+import org.springframework.stereotype.Service;
+
+import java.util.concurrent.TimeUnit;
+
+@Service
+public class PaymentService {
+
+    /**
+     * 正常访问，肯定OK
+     *
+     * @param id
+     * @return
+     */
+    public String paymentInfoOK(Integer id) {
+        return "线程池:  " + Thread.currentThread().getName() + "  paymentInfoOK,id:  " + id + "\t"
+                + "O(∩_∩)O哈哈~";
+    }
+
+
+    /**
+     * 超时访问，设置自身调用超时的峰值，峰值内正常运行，超过了峰值需要服务降级 自动调用fallbackMethod 指定的方法
+     * 超时异常或者运行异常 都会进行服务降级
+     *
+     * @param id
+     * @return
+     */
+    @HystrixCommand(fallbackMethod = "paymentInfo_TimeOut_Handler",commandProperties = {
+            @HystrixProperty(name = "execution.isolation.thread.timeoutInMilliseconds",value = "5000")
+    })
+    public String paymentInfoTimeOut(Integer id) {
+//        int age = 10/0;
+        int second = 3;
+        long start = System.currentTimeMillis();
+        try {
+            TimeUnit.SECONDS.sleep(second);
+        } catch (InterruptedException e) {
+            e.printStackTrace();
+        }
+        long end = System.currentTimeMillis();
+        System.out.println(end - start);
+        return "线程池:  " + Thread.currentThread().getName() + " paymentInfoTimeOut,id:  " + id + "\t"
+                + "O(∩_∩)O哈哈~" + "  耗时(秒): " + second;
+    }
+    //降级
+    public String paymentInfo_TimeOut_Handler(Integer id){
+
+        return "线程池:  " + Thread.currentThread().getName() + "  paymentInfoTimeOutHandler8001系统繁忙或者运行报错，请稍后再试,id:  " + id + "\t"
+                + "o(╥﹏╥)o";
+    }
+
+
+    /**
+     * 服务熔断 超时、异常、都会触发熔断
+     * 1、默认是最近10秒内收到不小于10个请求，<br/>
+     * 2、并且有60%是失败的<br/>
+     * 3、就开启断路器<br/>
+     * 4、开启后所有请求不再转发，降级逻辑自动切换为主逻辑，减小调用方的响应时间<br/>
+     * 5、经过一段时间（时间窗口期，默认是5秒），断路器变为半开状态，会让其中一个请求进行转发。<br/>
+     * &nbsp;&nbsp;5.1、如果成功，断路器会关闭，<br/>
+     * &nbsp;&nbsp;5.2、若失败，继续开启。重复4和5<br/>
+     * @HystrixProperty参数去HystrixCommandProperties中查看
+     * @param id
+     * @return
+     */
+    @HystrixCommand(fallbackMethod = "paymentCircuitBreakerFallback", commandProperties = {
+            @HystrixProperty(name = "circuitBreaker.enabled", value = "true"),/* 是否开启断路器*/
+            @HystrixProperty(name = "circuitBreaker.requestVolumeThreshold", value = "10"),// 请求次数
+            @HystrixProperty(name = "circuitBreaker.sleepWindowInMilliseconds", value = "10000"), // 时间窗口期
+            @HystrixProperty(name = "circuitBreaker.errorThresholdPercentage", value = "60"),// 失败率达到多少后跳闸
+//            @HystrixProperty(name = "execution.isolation.thread.timeoutInMilliseconds", value = "5000")// 超时处理
+    })
+    public String paymentCircuitBreaker(Integer id) {
+        if (id < 0) {
+            throw new RuntimeException("******id 不能负数");
+        }
+        //测试异常
+//        int age = 10 / 0;
+//        int second = 3;
+//        try {
+//            TimeUnit.SECONDS.sleep(second);
+//        } catch (InterruptedException e) {
+//            e.printStackTrace();
+//        }
+
+
+        String serialNumber = IdUtil.simpleUUID();
+        return Thread.currentThread().getName() + "\t" + "调用成功，流水号: " + serialNumber;
+    }
+
+
+    /**
+     * paymentCircuitBreaker 方法的 fallback，<br/>
+     * 当断路器开启时，主逻辑熔断降级，该 fallback 方法就会替换原 paymentCircuitBreaker 方法，处理请求
+     *
+     * @param id
+     * @return
+     */
+    public String paymentCircuitBreakerFallback(Integer id) {
+        return Thread.currentThread().getName() + "\t" + "id 不能负数或超时或自身错误，请稍后再试，/(ㄒoㄒ)/~~   id: " + id;
+    }
+
+}
Index: cloud-consumer-feign-order80/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-consumer-feign-order80/src/main/resources/application.yml	(date 1689821961244)
+++ cloud-consumer-feign-order80/src/main/resources/application.yml	(date 1689821961244)
@@ -0,0 +1,36 @@
+server:
+  port: 80
+
+#spring:
+#  application:
+#    name: cloud-order-service
+
+eureka:
+  client:
+    register-with-eureka: false # 不注册进eureka服务中心
+    service-url:
+      defaultZone: http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/
+
+
+#设置feign客户端超时时间(OpenFeign默认支持ribbon)
+ribbon:
+  #指的是建立连接所用的时间，适用于网络状况正常的情况下, 两端连接所用的时间
+  ConnectTimeout: 5000
+  #指的是建立连接后从服务器读取到可用资源所用的时间
+  ReadTimeout: 5000
+feign:
+#  httpclient:
+#    ok-http:
+#      read-timeout: 5
+#    connection-timeout: 5000
+  hystrix:
+    enabled: true #如果处理自身的容错就开启。开启方式与生产端不一样。
+
+logging:
+  level:
+    # feign日志以 debug 级别监控 com.atguigu.springcloud.service.PaymentFeignService 接口
+    com.zys.springcloud.service.PaymentFeignService: debug
+
+#feign:
+#  hystrix:
+#    enabled: true #如果处理自身的容错就开启。开启方式与生产端不一样。
\ No newline at end of file
Index: cloud-provider-hystrix-payment8001/src/main/java/com/zys/springcloud/controller/PaymentController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-provider-hystrix-payment8001/src/main/java/com/zys/springcloud/controller/PaymentController.java	(date 1689909130088)
+++ cloud-provider-hystrix-payment8001/src/main/java/com/zys/springcloud/controller/PaymentController.java	(date 1689909130088)
@@ -0,0 +1,51 @@
+package com.zys.springcloud.controller;
+
+import com.zys.springcloud.service.PaymentService;
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.beans.factory.annotation.Value;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PathVariable;
+import org.springframework.web.bind.annotation.RestController;
+
+@RestController
+@Slf4j
+
+public class PaymentController {
+
+    @Autowired
+    PaymentService paymentService;
+
+    @Value("${server.port}")
+    private String serverPort;
+
+    @GetMapping("/payment/hytrix/ok/{id}")
+    public String payment_Info_Ok(@PathVariable("id") Integer id){
+        String result = paymentService.paymentInfoOK(id);
+        log.info("result: " + result);
+        
+        return result;
+    }
+
+    @GetMapping("/payment/hytrix/timeout/{id}")
+    public String payment_Info_timeout(@PathVariable("id") Integer id){
+        String result = paymentService.paymentInfoTimeOut(id);
+        log.info("result: " + result);
+
+        return result;
+    }
+
+    /**
+     * 服务熔断
+     *
+     * @param id
+     * @return
+     */
+    @GetMapping("/circuit/{id}")
+    public String paymentCircuitBreaker(@PathVariable("id") Integer id) {
+        String result = paymentService.paymentCircuitBreaker(id);
+        log.info("****result: " + result);
+        return result;
+    }
+
+}
Index: cloud-consumer-hytrix-order80/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-consumer-hytrix-order80/src/main/resources/application.yml	(date 1689906460182)
+++ cloud-consumer-hytrix-order80/src/main/resources/application.yml	(date 1689906460182)
@@ -0,0 +1,14 @@
+server:
+  port: 80
+
+eureka:
+  client:
+    register-with-eureka: false
+    service-url:
+      defaultZone: http://eureka7001.com:7001/eureka/
+
+feign:
+  hystrix:
+    enabled: true #如果处理自身的容错就开启。开启方式与生产端不一样。
+  circuitbreaker:
+    enabled: true
\ No newline at end of file
Index: cloud-consumer-feign-order80/src/main/java/com/zys/springcloud/OrderFeignMain80.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-consumer-feign-order80/src/main/java/com/zys/springcloud/OrderFeignMain80.java	(date 1689755034999)
+++ cloud-consumer-feign-order80/src/main/java/com/zys/springcloud/OrderFeignMain80.java	(date 1689755034999)
@@ -0,0 +1,14 @@
+package com.zys.springcloud;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.cloud.openfeign.EnableFeignClients;
+
+@SpringBootApplication
+@EnableFeignClients
+public class OrderFeignMain80 {
+    public static void main(String[] args) {
+        SpringApplication.run(OrderFeignMain80.class,args);
+    }
+
+}
Index: cloud-gateway-gateway9527/cloud-gateway-gateway9527.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-gateway-gateway9527/cloud-gateway-gateway9527.iml	(date 1689924383979)
+++ cloud-gateway-gateway9527/cloud-gateway-gateway9527.iml	(date 1689924383979)
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4" />
\ No newline at end of file
Index: cloud-gateway-gateway9527/src/main/java/com/zys/springcloud/config/GatewayConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-gateway-gateway9527/src/main/java/com/zys/springcloud/config/GatewayConfig.java	(date 1689921324533)
+++ cloud-gateway-gateway9527/src/main/java/com/zys/springcloud/config/GatewayConfig.java	(date 1689921324533)
@@ -0,0 +1,19 @@
+package com.zys.springcloud.config;
+
+import org.springframework.cloud.gateway.route.RouteLocator;
+import org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+
+@Configuration
+public class GatewayConfig {
+
+    @Bean
+    public RouteLocator customRouteLocator(RouteLocatorBuilder routeLocatorBuilder) {
+        RouteLocatorBuilder.Builder routes = routeLocatorBuilder.routes();
+        routes.route("path_route_atguigu", r -> r.path("/guoji").uri("http://news.baidu.com/guonei"))
+                .build();
+        return routes.build();
+    }
+
+}
Index: cloud-provide-payment8002/src/test/java/TimeTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-provide-payment8002/src/test/java/TimeTest.java	(date 1689922409075)
+++ cloud-provide-payment8002/src/test/java/TimeTest.java	(date 1689922409075)
@@ -0,0 +1,12 @@
+import java.time.ZonedDateTime;
+
+public class TimeTest {
+
+    public static void main(String[] args) {
+
+        ZonedDateTime now = ZonedDateTime.now();
+        System.out.println(now);
+
+    }
+
+}
Index: cloud-consumer-hytrix-order80/src/main/java/com/zys/springcloud/service/FeignService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-consumer-hytrix-order80/src/main/java/com/zys/springcloud/service/FeignService.java	(date 1689905092102)
+++ cloud-consumer-hytrix-order80/src/main/java/com/zys/springcloud/service/FeignService.java	(date 1689905092102)
@@ -0,0 +1,22 @@
+package com.zys.springcloud.service;
+
+import com.zys.springcloud.service.impl.FallbackFeignServiceImpl;
+import org.springframework.cloud.openfeign.FeignClient;
+import org.springframework.stereotype.Component;
+import org.springframework.stereotype.Service;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PathVariable;
+
+@Component
+// FeignFallback 客户端的服务降级 针对 CLOUD-PROVIDER-HYSTRIX-PAYMENT 该服务 提供了一个 对应的服务降级类
+@FeignClient(value = "CLOUD-PROVIDER-HYSTRIX-PAYMENT",fallback = FallbackFeignServiceImpl.class)
+//fallback = FallbackFeignServiceImpl.class用于配置CLOUD-PROVIDER-HYSTRIX-PAYMENT服务器宕机后无法连接的异常
+public interface FeignService {
+
+    @GetMapping("/payment/hytrix/ok/{id}")
+    public String payment_Info_Ok(@PathVariable("id") Integer id);
+
+    @GetMapping("/payment/hytrix/timeout/{id}")
+    public String payment_Info_timeout(@PathVariable("id") Integer id);
+
+}
Index: cloud-consumer-hytrix-order80/src/main/java/com/zys/springcloud/controller/ConsumerPaymentController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-consumer-hytrix-order80/src/main/java/com/zys/springcloud/controller/ConsumerPaymentController.java	(date 1689906188148)
+++ cloud-consumer-hytrix-order80/src/main/java/com/zys/springcloud/controller/ConsumerPaymentController.java	(date 1689906188148)
@@ -0,0 +1,49 @@
+package com.zys.springcloud.controller;
+
+import com.netflix.hystrix.contrib.javanica.annotation.DefaultProperties;
+import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;
+import com.netflix.hystrix.contrib.javanica.annotation.HystrixProperty;
+import com.zys.springcloud.service.FeignService;
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PathVariable;
+import org.springframework.web.bind.annotation.RestController;
+
+@RestController
+@Slf4j
+//@HystrixCommand、@DefaultProperties处理运行时异常和超时异常
+@DefaultProperties(defaultFallback = "payment_global_fallback_method")
+//不写@HystrixProperty中的超时时间openfeign默认超时时间1秒
+//,commandProperties = {
+//        @HystrixProperty(name = "execution.isolation.thread.timeoutInMilliseconds",value = "5000")
+//}
+public class ConsumerPaymentController {
+
+    @Autowired
+    FeignService feignService;
+
+    @GetMapping("consumer/payment/hytrix/ok/{id}")
+    public String payment_Info_Ok(@PathVariable("id") Integer id){
+        String result = feignService.payment_Info_Ok(id);
+        return result;
+    }
+
+    @GetMapping("consumer/payment/hytrix/timeout/{id}")
+//    @HystrixCommand(fallbackMethod = "payment_Info_timeout_handler",commandProperties = {
+//            @HystrixProperty(name = "execution.isolation.thread.timeoutInMilliseconds",value = "5000")
+//    })
+    @HystrixCommand
+    public String payment_Info_timeout(@PathVariable("id") Integer id){
+        String result = feignService.payment_Info_timeout(id);
+        return result;
+    }
+    public String payment_Info_timeout_handler(@PathVariable("id") Integer id){
+        return "我是消费者80,对方支付系统繁忙请10秒钟后再试或者自己运行出错请检查自己,o(╥﹏╥)o";
+    }
+    public String payment_global_fallback_method(){
+        return "global--全局服务降级o(╥﹏╥)o";
+    }
+
+
+}
Index: cloud-provider-hystrix-payment8001/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-provider-hystrix-payment8001/pom.xml	(date 1689908608189)
+++ cloud-provider-hystrix-payment8001/pom.xml	(date 1689908608189)
@@ -0,0 +1,71 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>code</artifactId>
+        <groupId>org.zys</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>cloud-provider-hystrix-payment8001</artifactId>
+
+    <dependencies>
+        <!--新增hystrix 需要加版本号不然默认找不到-->
+        <!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-netflix-hystrix -->
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
+            <version>2.2.6.RELEASE</version>
+        </dependency>
+
+
+
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>org.zys</groupId>
+            <artifactId>cloud-api-commons</artifactId>
+            <version>${project.version}</version>
+        </dependency>
+
+
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-actuator</artifactId>
+        </dependency>
+
+        <!--        <dependency>-->
+        <!--            <groupId>org.springframework.boot</groupId>-->
+        <!--            <artifactId>spring-boot-devtools</artifactId>-->
+        <!--            <scope>runtime</scope>-->
+        <!--            <optional>true</optional>-->
+        <!--        </dependency>-->
+
+        <dependency>
+            <groupId>org.projectlombok</groupId>
+            <artifactId>lombok</artifactId>
+            <optional>true</optional>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-test</artifactId>
+            <scope>test</scope>
+        </dependency>
+
+        <dependency>
+            <groupId>cn.hutool</groupId>
+            <artifactId>hutool-all</artifactId>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: cloud-consumer-feign-order80/src/main/java/com/zys/springcloud/controller/OrderFeignController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-consumer-feign-order80/src/main/java/com/zys/springcloud/controller/OrderFeignController.java	(date 1689755852600)
+++ cloud-consumer-feign-order80/src/main/java/com/zys/springcloud/controller/OrderFeignController.java	(date 1689755852600)
@@ -0,0 +1,27 @@
+package com.zys.springcloud.controller;
+
+import com.zys.springcloud.entities.CommonResult;
+import com.zys.springcloud.entities.Payment;
+import com.zys.springcloud.service.PaymentFeignService;
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PathVariable;
+import org.springframework.web.bind.annotation.RestController;
+
+import javax.annotation.Resource;
+
+@RestController
+@Slf4j
+public class OrderFeignController {
+
+    @Resource
+    PaymentFeignService paymentFeignService;
+
+    @GetMapping("/consumer/payment/get/{id}")
+    public CommonResult<Payment> getPaymentById(@PathVariable("id") long id){
+        CommonResult paymentById = paymentFeignService.getPaymentById(id);
+        return paymentById;
+    }
+
+}
Index: cloud-consumer-feign-order80/src/main/java/com/zys/springcloud/service/PaymentFeignService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-consumer-feign-order80/src/main/java/com/zys/springcloud/service/PaymentFeignService.java	(date 1689823572714)
+++ cloud-consumer-feign-order80/src/main/java/com/zys/springcloud/service/PaymentFeignService.java	(date 1689823572714)
@@ -0,0 +1,16 @@
+package com.zys.springcloud.service;
+
+import com.zys.springcloud.entities.CommonResult;
+import com.zys.springcloud.entities.Payment;
+import org.springframework.cloud.openfeign.FeignClient;
+import org.springframework.stereotype.Service;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PathVariable;
+
+@Service
+@FeignClient(value = "CLOUD-PAYMENT-SERVICE")
+public interface PaymentFeignService {
+
+    @GetMapping("/payment/get/{id}")
+    public CommonResult getPaymentById(@PathVariable("id") long id);
+}
Index: cloud-consumer-hytrix-order80/cloud-consumer-hytrix-order80.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-consumer-hytrix-order80/cloud-consumer-hytrix-order80.iml	(date 1689816146177)
+++ cloud-consumer-hytrix-order80/cloud-consumer-hytrix-order80.iml	(date 1689816146177)
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4" />
\ No newline at end of file
Index: cloud-providerconsul-payment8006/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-providerconsul-payment8006/src/main/resources/application.yml	(date 1689734990069)
+++ cloud-providerconsul-payment8006/src/main/resources/application.yml	(date 1689734990069)
@@ -0,0 +1,12 @@
+server:
+  port: 8006
+spring:
+  application:
+    name: consul-provider-payment
+
+  cloud:
+    consul:
+      host: localhost
+      port: 8500
+      discovery:
+        service-name: ${spring.application.name}
Index: cloud-provide-payment8004/cloud-provide-payment8004.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-provide-payment8004/cloud-provide-payment8004.iml	(date 1689673744044)
+++ cloud-provide-payment8004/cloud-provide-payment8004.iml	(date 1689673744044)
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4" />
\ No newline at end of file
Index: cloud-provide-payment8004/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-provide-payment8004/pom.xml	(date 1689731583505)
+++ cloud-provide-payment8004/pom.xml	(date 1689731583505)
@@ -0,0 +1,62 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>code</artifactId>
+        <groupId>org.zys</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>cloud-provide-payment8004</artifactId>
+
+    <dependencies>
+        <!-- SpringBoot整合Web组件 -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+        <dependency><!-- 引入自己定义的api通用包，可以使用Payment支付Entity -->
+            <groupId>org.zys</groupId>
+            <artifactId>cloud-api-commons</artifactId>
+            <version>1.0-SNAPSHOT</version>
+        </dependency>
+        <!-- SpringBoot整合zookeeper客户端 -->
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-zookeeper-discovery</artifactId>
+            <!--先排除自带的zookeeper3.5.3-->
+            <exclusions>
+                <exclusion>
+                    <groupId>org.apache.zookeeper</groupId>
+                    <artifactId>zookeeper</artifactId>
+                </exclusion>
+            </exclusions>
+        </dependency>
+        <!--添加zookeeper3.4.9版本-->
+        <dependency>
+            <groupId>org.apache.zookeeper</groupId>
+            <artifactId>zookeeper</artifactId>
+            <version>3.7.0</version>
+        </dependency>
+        <!--        <dependency>-->
+        <!--            <groupId>org.springframework.boot</groupId>-->
+        <!--            <artifactId>spring-boot-devtools</artifactId>-->
+        <!--            <scope>runtime</scope>-->
+        <!--            <optional>true</optional>-->
+        <!--        </dependency>-->
+        <dependency>
+            <groupId>org.projectlombok</groupId>
+            <artifactId>lombok</artifactId>
+            <optional>true</optional>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-test</artifactId>
+            <scope>test</scope>
+        </dependency>
+    </dependencies>
+
+
+</project>
\ No newline at end of file
Index: cloud-providerconsul-payment8006/src/main/java/com/zys/springcloud/CloudProviderconsulPayment8006Application.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-providerconsul-payment8006/src/main/java/com/zys/springcloud/CloudProviderconsulPayment8006Application.java	(date 1689734845918)
+++ cloud-providerconsul-payment8006/src/main/java/com/zys/springcloud/CloudProviderconsulPayment8006Application.java	(date 1689734845918)
@@ -0,0 +1,14 @@
+package com.zys.springcloud;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
+
+@SpringBootApplication
+@EnableDiscoveryClient
+public class CloudProviderconsulPayment8006Application {
+
+    public static void main(String[] args) {
+        SpringApplication.run(CloudProviderconsulPayment8006Application.class,args);
+    }
+}
Index: cloud-provide-payment8002/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-provide-payment8002/src/main/resources/application.yml	(revision 0bd6cb819ad970b4ff1cc4f7e8b7216d4db06cd1)
+++ cloud-provide-payment8002/src/main/resources/application.yml	(date 1689921894892)
@@ -21,8 +21,8 @@
     #是否从EurekaServer抓取已有的的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
     fetch-registry: true
     service-url:
-      #defaultZone: http://localhost:7001/eureka
-      defaultZone: http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/
+      defaultZone: http://localhost:7001/eureka
+      #defaultZone: http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/
   instance:
     prefer-ip-address: true
     instance-id: payment8002
Index: cloud-provider-hystrix-payment8001/cloud-provider-hystrix-payment8001.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-provider-hystrix-payment8001/cloud-provider-hystrix-payment8001.iml	(date 1689758288123)
+++ cloud-provider-hystrix-payment8001/cloud-provider-hystrix-payment8001.iml	(date 1689758288123)
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4" />
\ No newline at end of file
Index: cloud-consumer-hytrix-order80/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-consumer-hytrix-order80/pom.xml	(date 1689820423686)
+++ cloud-consumer-hytrix-order80/pom.xml	(date 1689820423686)
@@ -0,0 +1,63 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>code</artifactId>
+        <groupId>org.zys</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>cloud-consumer-hytrix-order80</artifactId>
+
+    <dependencies>
+        <!--新增hystrix 需要加版本号不然默认找不到-->
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
+            <version>2.2.6.RELEASE</version>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-openfeign</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.zys</groupId>
+            <artifactId>cloud-api-commons</artifactId>
+            <version>${project.version}</version>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-actuator</artifactId>
+        </dependency>
+
+        <!--        <dependency>-->
+        <!--            <groupId>org.springframework.boot</groupId>-->
+        <!--            <artifactId>spring-boot-devtools</artifactId>-->
+        <!--            <scope>runtime</scope>-->
+        <!--            <optional>true</optional>-->
+        <!--        </dependency>-->
+
+        <dependency>
+            <groupId>org.projectlombok</groupId>
+            <artifactId>lombok</artifactId>
+            <optional>true</optional>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-test</artifactId>
+            <scope>test</scope>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: cloud-eureka-server7001/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-eureka-server7001/src/main/resources/application.yml	(revision 0bd6cb819ad970b4ff1cc4f7e8b7216d4db06cd1)
+++ cloud-eureka-server7001/src/main/resources/application.yml	(date 1689758232723)
@@ -12,7 +12,8 @@
     service-url:
       #设置Eureka Server交互的地址查询服务和注册服务都需要依赖这个地址。
 #      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
-      defaultZone: http://eureka7002.com:7002/eureka/ #集群模式
+#      defaultZone: http://eureka7002.com:7002/eureka/ #集群模式
+      defaultZone: http://eureka7001.com:7001/eureka/ #单个模式
   server:
     #关闭自我保护机制，保证不可以服务被及时剔除
     enable-self-preservation: false
Index: cloud-consumerconsul-order80/cloud-consumerconsul-order80.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-consumerconsul-order80/cloud-consumerconsul-order80.iml	(date 1689735542915)
+++ cloud-consumerconsul-order80/cloud-consumerconsul-order80.iml	(date 1689735542915)
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4" />
\ No newline at end of file
Index: cloud-providerconsul-payment8006/src/main/java/com/zys/springcloud/controller/PaymentContoller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-providerconsul-payment8006/src/main/java/com/zys/springcloud/controller/PaymentContoller.java	(date 1689735093281)
+++ cloud-providerconsul-payment8006/src/main/java/com/zys/springcloud/controller/PaymentContoller.java	(date 1689735093281)
@@ -0,0 +1,20 @@
+package com.zys.springcloud.controller;
+
+import org.springframework.beans.factory.annotation.Value;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RestController;
+
+import java.util.UUID;
+
+@RestController
+public class PaymentContoller {
+
+    @Value("${server.port}")
+    private String serverPort;
+
+    @RequestMapping(value = "/payment/consul")
+    public String paymentConsul() {
+        return "springcloud with consul: " + serverPort + "\t" + UUID.randomUUID().toString();
+    }
+
+}
Index: cloud-consumerconsul-order80/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-consumerconsul-order80/pom.xml	(date 1689735564934)
+++ cloud-consumerconsul-order80/pom.xml	(date 1689735564934)
@@ -0,0 +1,66 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>code</artifactId>
+        <groupId>org.zys</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>cloud-consumerconsul-order80</artifactId>
+
+
+    <dependencies>
+        <!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-consul-discovery -->
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-consul-discovery</artifactId>
+        </dependency>
+
+        <dependency>
+            <artifactId>cloud-api-commons</artifactId>
+            <groupId>org.zys</groupId>
+            <version>1.0-SNAPSHOT</version>
+        </dependency>
+
+
+        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+
+        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-actuator</artifactId>
+        </dependency>
+
+        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools -->
+        <!--        <dependency>-->
+        <!--            <groupId>org.springframework.boot</groupId>-->
+        <!--            <artifactId>spring-boot-devtools</artifactId>-->
+        <!--            <scope>runtime</scope>-->
+        <!--            <optional>true</optional>-->
+        <!--        </dependency>-->
+
+        <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
+        <dependency>
+            <groupId>org.projectlombok</groupId>
+            <artifactId>lombok</artifactId>
+            <optional>true</optional>
+        </dependency>
+
+        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-test</artifactId>
+            <scope>test</scope>
+        </dependency>
+
+
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: cloud-provide-payment8001/src/main/java/com/zys/springcloud/controller/PaymentController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-provide-payment8001/src/main/java/com/zys/springcloud/controller/PaymentController.java	(revision 0bd6cb819ad970b4ff1cc4f7e8b7216d4db06cd1)
+++ cloud-provide-payment8001/src/main/java/com/zys/springcloud/controller/PaymentController.java	(date 1689920787490)
@@ -45,6 +45,11 @@
 
     }
 
+    @GetMapping("/payment/lb/")
+    public String port(){
+        return serverPort;
+    }
+
     @GetMapping("/payment/discovery")
     public Object discovery(){
 
Index: cloud-consumer-hytrix-order80/src/main/java/com/zys/springcloud/service/impl/FallbackFeignServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-consumer-hytrix-order80/src/main/java/com/zys/springcloud/service/impl/FallbackFeignServiceImpl.java	(date 1689905092118)
+++ cloud-consumer-hytrix-order80/src/main/java/com/zys/springcloud/service/impl/FallbackFeignServiceImpl.java	(date 1689905092118)
@@ -0,0 +1,18 @@
+package com.zys.springcloud.service.impl;
+
+import com.zys.springcloud.service.FeignService;
+import org.springframework.stereotype.Component;
+import org.springframework.stereotype.Service;
+
+@Component
+public class FallbackFeignServiceImpl implements FeignService {
+    @Override
+    public String payment_Info_Ok(Integer id) {
+        return "-----PaymentFallbackService fall back-paymentInfo_OK ,o(╥﹏╥)o";
+    }
+
+    @Override
+    public String payment_Info_timeout(Integer id) {
+        return "-----PaymentFallbackService fall back-paymentInfo_TimeOut ,o(╥﹏╥)o";
+    }
+}
diff --git cloud-provide-payment8004/target/classes/com/zys/springcloud/CloudProvidePayment8004Application.class cloud-provide-payment8004/target/classes/com/zys/springcloud/CloudProvidePayment8004Application.class
new file mode 100644
index 0000000000000000000000000000000000000000..22725afd2b865d2f5be8f77192b2f6ae6efad890
GIT binary patch
literal 839
zc$}S5O>fgc5Ph4baWH|F6bj|zz^Nezwuh>!WK^j&aI&BxC>%Jgovqno??&r&Ap9#%
zAP)QheiUMNW0W8TA>ox~H1lTO>>KZopWnU%IK+bxZQKg58{#(Z1lS|!JP}fu6M~Jw
zqcK4{RufLJl?cgS)Md)`YnB!^(@#{!iZRo|#Z9tp-ieCfILTB=Kg}yzO|_7DR;YSH
zV`tB`nu!TNXY-Ovb9``ccsiXHB4b7<8Ciys2}!U!c$-|Z8KVW0IUO0t68ZZuo!bdJ
zYhZ$Kq-ve<=fd4(|KIZ-I}U=qSG6>v<YQ3@E8|p3Wjt;Nog_-<jf@M;O8!CV_cT??
zP*xk2DS09CT5~$`C1)1+Q_$I3g2hI%LfA{uiKsF)<9be?Nw>$RzvI~BQ4gEw5FGvA
zQUl!W;U4Z2Y%f>#GQH%PAsGHu-9pa_k9`rkwl*ECtUfMSRYmLm)q2@V8vfDHxLKQ1
zyD}nPz!4szWgn*dS|ConwSkSO^~Czk;TMq49`0J(@yRRp0KG*4LR|H^9<DXbN1hDm
l_FKcR*m$$-53P5dfvsI~ba5S9zGmCo8|XK+JJ#O>egU|9=u!Xx

diff --git cloud-provide-payment8002/target/classes/com/zys/springcloud/controller/PaymentController.class cloud-provide-payment8002/target/classes/com/zys/springcloud/controller/PaymentController.class
index 40cabced26ced695cc8ca8bebb9ac2e7242dcfd2..d82ec9e3e3739b6dbf0499f3884bec5e0f57eecb
GIT binary patch
literal 2859
zc$}41T~ixX7=8``HiYFXmLe5Osgx!lELK`;fhwR>kOC4!v3_lmLs;1Crn?&$?0Df_
z$BXKfH_qsd&UoWY(GDM_dg(a+4sm+tA8;Jsv%5(kq#BrE&+ggx<9VL*zHj#Te;)n<
zU=U6St(d4m3vP(Z>p@J`VhV4Fhv{0}#EgX55a#fvg!vFcm<S>!)&+5SD}*2xgLpfL
zcf|8j5bp}7TS2@R#QPFH2;oC~Btc~e=w^x`JZ)Mj#nzVxSCwfqmEzVALw!cwOmoAD
zacf;maE9lm6J}cZc+*zwjHMZ=gl=Y&itW8t=8jmCf9rhKaI`dE)NC!T^HIYv9o5lH
z!)CbZC3M3qTWXqbnAVyS=c-{V%WA?gtxZMEJ1C=B$K22?o}{oLk&s(+rsW9WtLnO{
z=&F%YVvdML7K0}XzNqS1fwyX1+z{`sJ6?+Z4CVNQp?X*|H0L^r6^Sk~RF0cTGHaOD
z3_g=h$GNqj5<gePgsLy9mL{J4%}QrQBf^(TYL_q#$1-)DTRHj0^E-s7GUJjw6^WKl
zbA!i~xMm~|GrYl_n`$QGxyg!uu8JO4h+M+rszX3yk&+O}P;)eH=Ku~x|J!WbOs7p_
zp4(a7p=^?$jG?={@Px>6of+69LtV^K6KjOtm-BMjq~}cg5bK6K>m1+nN6T|g7111S
z9jVju)6MhSS#CRHW^z;XPKrA|qp{7&Btw5>>SV%IXynDFB*YmSbJ!`Waz{&2O<pNq
z2h~~0)g;9Y4kvWKoI^1)YbE%ECWJkGtN{B(%{{4AOG{uMu3s4!&@JN}I%S-}GYsuT
zXK--$tAqWABmSR+gp4G(j5f4OSe7vW8cor%MU${1L&GXVOL4c1Wi>s?Erv5*&Oh&d
zaq!tUe?9uNFiS>ctU;HNMxOv~P|0|<2j6Zze()XHl19bn@c7=&!RKEJPm`hckKG?~
zWMm8>L+Lz&Qt2qZ_wrEufs@V%3Abffph9gdP@avi@&vU{S2_Jgp2ee|=8k486QSnF
z@v$QYU{Co!19X1njumS5rb4<&!{II#$(_ox%cOo}^6(t=EyTc}F6RcdOJ6C#$F}@p
z5WV1--WJ2PNQuzLqfHmf><ZE*n)}IVqW|0bh2hsyd>Rwp4;DiW6<zLtE*wTXuB*09
zJdgc^qmw=tTIqu#K>bG@2=PbF1%|V9S50dNtren0{k>XR&(r_2Ho8znH`Ky(y-2SV
zS{bcXJv(4qu3yBD0@NW&SJ^W_4|-{(4+iv+)lugMsJLI`+)~0>fT^dQegWndnC*rb
z!1F{#1pJ;X1GLWnh(Ne<4^<VQ(AB+rkSZ|J_BDF<5nO7*Z@Z}3M`&pWwPAT1bs|44
z+o*4&H#=y!@7l3P^b~GnV#5_opbMjtuI=;%br#Je)hG!ike>50`$)yzCA>iBnlVD(
zZkLJM6_4BB7-e}TFXowC#Y?m&2}Q2CIt^jir}Z<@5=lAH%E4|TydB#JhoAC*=gD^L
z;Zy)KeZL}doNV(EvVBENPnTlaP0TJ5rwA5^XMritGv&naIsxt_;Df|D;4%#grVA2Y
zE^%tFxLjqyb=0e?5wai4S5>Eb>L5rhyLkF11h!m73dJFloa1i6yqd4t*MNTksw^5V

diff --git cloud-consumerzk-order80/target/classes/springcloud/CloudConsumerzkOrder80Application.class cloud-consumerzk-order80/target/classes/springcloud/CloudConsumerzkOrder80Application.class
new file mode 100644
index 0000000000000000000000000000000000000000..18750dd6b8dfca03101ec96980b500d4a4067992
GIT binary patch
literal 820
zc$}3|U2oGc6g}>`reuYU4hG}nftRVP1m*!vNI{df08bH<C@K#;IjNU<OYF*V#^7J^
z1mb}oz>h-MPNx>BXj&rOtNV4X&#{01`S}aL3p@_d#@zs0A@1RRfNg@#D<Os1Cs-Nm
zjtSbans9>kL`eRwE>o^Qu(Yt5exfo~jF}cLo+aDnL{tPcsis=UJS$W^p|P{El2u)D
z{q^ifPq=>h{9rmQM8=FzGO~ju6Ov$S@F_WE=ZqFi=5%BnNaT;fbZ&t+my`*@k*amZ
z-wJnxoh#Qpa}WgE?`vs9$;YA+_V5Q%D&y;R&wiqGP8$-(nw9*s(q}YP%1~Atl__~F
z@>+8`@-2t9@Gqakr2vf{Ss}PIbRw!uopb$#zL8G7*OzhZ>roG@=ny=;mXrY=^zaam
z2sY+I9i^u{GX%r`l4@uy;MnWewYBMBLGZX>RTV9}q2+9qH2lKQc&3&kxv(N`$`PKR
zWnZEDS|E<JwSkSO^~Czs;dhX4zTCC8<C8b+5A>P_gjn;r9&XNt_dFQT?YD+Mu<~&}
dA6oAw1KT^t=;9XEeb0usx6z;VZd!i__zQxi;%@)|

diff --git cloud-consumerzk-order80/target/classes/META-INF/cloud-consumerzk-order80.kotlin_module cloud-consumerzk-order80/target/classes/META-INF/cloud-consumerzk-order80.kotlin_module
new file mode 100644
index 0000000000000000000000000000000000000000..a49347afef10a9b5f95305e1058ba36adec7d6dd
GIT binary patch
literal 16
Rc${NkU|?ooU|@t|0RRA102TlM

diff --git cloud-provide-payment8004/target/classes/com/zys/springcloud/controller/PaymentController.class cloud-provide-payment8004/target/classes/com/zys/springcloud/controller/PaymentController.class
new file mode 100644
index 0000000000000000000000000000000000000000..1121e8ab7c45d3325c3e6f205117d54c182c4d10
GIT binary patch
literal 1039
zc$}3}T~8D-6g}l*KZcQy6+r}bQP5o!ii8KF#zZkDCaVyTO^i?7*#d>xcI|W^VEj*-
z7%-an1N>3O+uap6z>5!aZ+m<1x#yl~fBpXc6TmW-0)&{(;#PnjOy_Xh`<XljFq^}j
z0C!RHrtHJzEatMf#}Fja?n}F7tYautcE!HnvC!Lm!&#-bA2Up>r`oB8tg1xSV);yK
z<AhU2Ck)FKW4C$I^r>4`G~|J?d%PxvPWYCHoUw;ooEGq^h*L?B{ri5wFgWwE-F~4-
z{Xa2eo+z!{Q-<DBxysPDV(OGOR8d;KNgFk3-wLAOiJC~nRbiFicY=LxM-iu`N@N=R
z=rHN<iei)2d1SP+CXS`$YvQmWwOcuj5Tksv9X#4&7%i1A(&6ESvmVGAuPI&c9&=rO
zNM+()i)OQ3I>0;d+~WruCbf}#sXXbib8HrT@BeF;bPp5aGDaE3&yMgsRdHQfhN&)H
ziU-Q=6pxJAld>u8qhg5rm=AFYgA6R6#X<;<#SjlL$*}mp$}$Z9qp@1sl@Z;t4Cx|u
zongLoUgz`DcX*SGgRP^~shDqWzIs7QTA}Nv(cTpP{<hNuD#<z1M!___gOJ_{quWo@
zksqSn0Qq71MiLb0fO+l6UZEpSo{{gLI|2Jbiyn-T&9s66#>s~51YE^L3;7x*Da#kH
zw!nbdALw~^g5E;kF#&x=hFl>_<{NUy$kXB&!RIsJBVFLL9dJ+9lb-Tq--9K%PBk}L
Ml{Z_bzP1Sb0Y7#NSO5S3

diff --git cloud-consumerzk-order80/target/classes/springcloud/configration/ApplicationContextConfig.class cloud-consumerzk-order80/target/classes/springcloud/configration/ApplicationContextConfig.class
new file mode 100644
index 0000000000000000000000000000000000000000..2ad82f8a0a3d52c1d448318ccb4af47cf4ea11aa
GIT binary patch
literal 757
zc$}3|OHUgy5dIuOUZn*>DRAJ>8x$3bhk5~33XwRiK%yuTN3UbHrW-qQyui<b6H<}*
z0sJV$*o#nvQmL%8^YF|!^Uc_gPk$c(>|&*bX)M<9rG-k+OLZ(W)b_Q}{wKrK+Io+n
z+O>VfFq>$jj*3C5+^I-&I%y|Xio7SB4*ttw)&JHbhMi<IblPMxw?&^zYtD7%gxA*a
z&TyD(8SSn$US0cc4DV5oO!*Tv@~3Jr%!Q|Nd~H3kF5_jjb0-Gs%DO-NN~K)pS{cvB
z0aRn<q%d9&R8NmIG3pp&eQZXozE7+rOBP(brt$+N4At77oL|mVcF(Qory>_dD#sIY
z4oas_@YXL|IH?YGSj_6b=H9#zmxAHP|8gr)MY+wr8Prf`*m%d17`EPhISg}wCa2jl
zew<z?>G2g+dOqQ+fCU;P8{~1)jP&%kJFwdrZj!9U!zNlJXUYV8APZ!F#3#xM;O$rp
lXxyW6c895(H~97#zVU*er9ZsjInwhnza8a5j0D_g;2DSb&J6$n

diff --git cloud-consumerzk-order80/target/classes/springcloud/controller/OrderController.class cloud-consumerzk-order80/target/classes/springcloud/controller/OrderController.class
new file mode 100644
index 0000000000000000000000000000000000000000..5b7a68173bad1c6a6f1730f58d21833ca2acb241
GIT binary patch
literal 1286
zc$}3}TTc@~6#mBE%W|>Y1VlvzTd<6mdWjGd(}+O}B!GS4!A#qsENpk0=@i6YCDEuc
z(fI6-GM?QnwYF;TVfV~Ad(Qd3@64X>KR$m2ki&x{qL@t}gt-`Q#F3666T^HG3%Hp?
z7K`2|&Jc1`l_6D7y2=~QZf>6!RJAJg5<_xzy}0q>>8qEU1utV?9189Tx5~GSw%saa
z^yih^Fv2xO;WT9&w-_uf8)jS9>W(myAsaNVdj-2%)Z~%U2mDBuc-gU~YxrhII(3}b
zY`Vs-$)eq`OOAZvy2=P+6AZ(YPvJEe?Vwk!n!4;&Mwe~ZHjhbBI#Xl_=T(L92Me|<
z*PFGH)Z2m@`clinDGF_Sek&L@dp04Y3jx!zqnZ_7R<6;?air!Ox*~PH?Gs#IT^!d)
zz^c2e7)H{WKg}mf!)Q8&A@|oYlx(-sspy$BYocBc>LZ8VTnUV~(D<7JhWIkgF3_6X
z^5w7Co`{hymWv)EhKFay_U@uXq=gZTS{TB4hPks1hDNw&O#Kn(erC3=)uBxp*;D?V
zI)=I@_FHJ9v@gphhT9hI;BE{#3-@r}LK1xp)Bi+aSon{>j{e!IG%HF6hz!ruy?5CW
z$vdLaSlTIcQ(emRh8V`X7i&e7jnc;q2|^7*472GTfK2a7Vup4$O6wiMq&EjTO~67w
z7zXHk4uka2b&;PUKT3Ak&t~3D(tC_NPL`34%zp$s@yo_r$)Ms3^tOToYCcJp77rIG
z%PU?(m`=dx{Ck{Bg;SBx7eqfG_6?E3!rOMUq@OfN=u>{fv7o5caG1PlpS8zwfb1oD
pF7JRfa0PKvdCGOhCjul=p-+gvL*m5e^NX)1_^J<ktu6UF@DuXsOQ8S&

